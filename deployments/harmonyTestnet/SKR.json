{
  "address": "0x8C66D611540D464A009C96B4b5a2e428283217B8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recoveryAdmin_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timelockPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lossless_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LosslessOff",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LosslessOn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_turnOffDate",
          "type": "uint256"
        }
      ],
      "name": "LosslessTurnOffProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "NewRecoveryAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "NewRecoveryAdminProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "acceptRecoveryAdminOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeLosslessTurnOff",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeLosslessTurnOn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isLosslessOn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lossless",
      "outputs": [
        {
          "internalType": "contract ILssController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "losslessTurnOffTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposeLosslessTurnOff",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recoveryAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setLosslessAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "from",
          "type": "address[]"
        }
      ],
      "name": "transferOutBlacklistedFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "candidate",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "keyHash",
          "type": "bytes32"
        }
      ],
      "name": "transferRecoveryAdminOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4632671eb2a95dc4fe8fa556a75ca6be072308df90f2ee35784370f2d97245c0",
  "receipt": {
    "to": null,
    "from": "0xea54a06ef6218a4fc2f6edF293E73e4a2a2e4C09",
    "contractAddress": "0x8C66D611540D464A009C96B4b5a2e428283217B8",
    "transactionIndex": 0,
    "gasUsed": "1593954",
    "logsBloom": "0x
    "blockHash": "0x7de64394c71915b77b833c47849c7e7d4a48e79cf6a03c0bf9e306d9252154b2",
    "transactionHash": "0x4632671eb2a95dc4fe8fa556a75ca6be072308df90f2ee35784370f2d97245c0",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 25032504,
        "transactionHash": "0x4632671eb2a95dc4fe8fa556a75ca6be072308df90f2ee35784370f2d97245c0",
        "address": "0x8C66D611540D464A009C96B4b5a2e428283217B8",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ea54a06ef6218a4fc2f6edf293e73e4a2a2e4c09"
        ],
        "data": "0x0000000000000000000000000000000000000000033b2e3c9fd0803ce8000000",
        "logIndex": 0,
        "blockHash": "0x7de64394c71915b77b833c47849c7e7d4a48e79cf6a03c0bf9e306d9252154b2"
      }
    ],
    "blockNumber": 25032504,
    "cumulativeGasUsed": "1593954",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd8a1Fe371Aeac3c6eE89fcDf36440C2287f50215",
    "0x3821eB09C92e0d46ad3de3Ad3E1Eea765D1a485c",
    "86400",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "332bd2e6a6791dc2b5a204bd9fa338ce",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recoveryAdmin_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timelockPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lossless_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LosslessOff\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LosslessOn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_turnOffDate\",\"type\":\"uint256\"}],\"name\":\"LosslessTurnOffProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"NewRecoveryAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"NewRecoveryAdminProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"acceptRecoveryAdminOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeLosslessTurnOff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeLosslessTurnOn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLosslessOn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lossless\",\"outputs\":[{\"internalType\":\"contract ILssController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"losslessTurnOffTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposeLosslessTurnOff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoveryAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setLosslessAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"}],\"name\":\"transferOutBlacklistedFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"transferRecoveryAdminOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SKR.sol\":\"SKR\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/SKR.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./core/LERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\ncontract SKR is Context, LERC20 {\\n    constructor(\\n      address admin_, \\n      address recoveryAdmin_, \\n      uint256 timelockPeriod_, \\n      address lossless_\\n    ) LERC20(\\n      10**9 * 10**18, \\n      \\\"Saakuru\\\", \\n      \\\"SKR\\\", \\n      admin_, \\n      recoveryAdmin_, \\n      timelockPeriod_, \\n      lossless_\\n    ) {}\\n\\n    modifier lssBurn(address account, uint256 amount) {\\n        if (isLosslessOn) {\\n            lossless.beforeBurn(account, amount);\\n        } \\n        _;\\n    }\\n\\n    function burn(uint256 amount) public virtual lssBurn(_msgSender(), amount) {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    function burnFrom(address account, uint256 amount) public virtual lssBurn(account, amount) {\\n        uint256 currentAllowance = allowance(account, _msgSender());\\n        require(currentAllowance >= amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(account, _msgSender(), currentAllowance - amount);\\n        }\\n        _burn(account, amount);\\n    }\\n}\",\"keccak256\":\"0x3f1e13afe445e19848c6792e387fb0e8a70326283af922de8dad36434dca60ab\",\"license\":\"MIT\"},\"contracts/core/LERC20.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../interfaces/ILosslessERC20.sol\\\";\\nimport \\\"../interfaces/ILosslessController.sol\\\";\\n\\ncontract LERC20 is Context, ILERC20 {\\n    mapping (address => uint256) private _balances;\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n    uint256 private _totalSupply;\\n    string private _name;\\n    string private _symbol;\\n\\n    address public recoveryAdmin;\\n    address private recoveryAdminCandidate;\\n    bytes32 private recoveryAdminKeyHash;\\n    address override public admin;\\n    uint256 public timelockPeriod;\\n    uint256 public losslessTurnOffTimestamp;\\n    bool public isLosslessOn = true;\\n    ILssController public lossless;\\n\\n    constructor(uint256 totalSupply_, string memory name_, string memory symbol_, address admin_, address recoveryAdmin_, uint256 timelockPeriod_, address lossless_) {\\n        _mint(_msgSender(), totalSupply_);\\n        _name = name_;\\n        _symbol = symbol_;\\n        admin = admin_;\\n        recoveryAdmin = recoveryAdmin_;\\n        recoveryAdminCandidate = address(0);\\n        recoveryAdminKeyHash = \\\"\\\";\\n        timelockPeriod = timelockPeriod_;\\n        losslessTurnOffTimestamp = 0;\\n        if(lossless_ != address(0)) {\\n            lossless = ILssController(lossless_);\\n        } else {\\n            isLosslessOn = false;\\n        }\\n    }\\n\\n    // --- LOSSLESS modifiers ---\\n    modifier lssAprove(address spender, uint256 amount) {\\n        if (isLosslessOn) {\\n            lossless.beforeApprove(_msgSender(), spender, amount);\\n        } \\n        _;\\n    }\\n\\n    modifier lssTransfer(address recipient, uint256 amount) {\\n        if (isLosslessOn) {\\n            lossless.beforeTransfer(_msgSender(), recipient, amount);\\n        } \\n        _;\\n    }\\n\\n    modifier lssTransferFrom(address sender, address recipient, uint256 amount) {\\n        if (isLosslessOn) {\\n            lossless.beforeTransferFrom(_msgSender(),sender, recipient, amount);\\n        }\\n        _;\\n    }\\n\\n    modifier lssIncreaseAllowance(address spender, uint256 addedValue) {\\n        if (isLosslessOn) {\\n            lossless.beforeIncreaseAllowance(_msgSender(), spender, addedValue);\\n        }\\n        _;\\n    }\\n\\n    modifier lssDecreaseAllowance(address spender, uint256 subtractedValue) {\\n        if (isLosslessOn) {\\n            lossless.beforeDecreaseAllowance(_msgSender(), spender, subtractedValue);\\n        }\\n        _;\\n    }\\n\\n    modifier onlyRecoveryAdmin() {\\n        require(_msgSender() == recoveryAdmin, \\\"LERC20: Must be recovery admin\\\");\\n        _;\\n    }\\n\\n    // --- LOSSLESS management ---\\n    function transferOutBlacklistedFunds(address[] calldata from) override external {\\n        require(_msgSender() == address(lossless), \\\"LERC20: Only lossless contract\\\");\\n        require(isLosslessOn, \\\"LERC20: Lossless is off\\\");\\n\\n        uint256 fromLength = from.length;\\n        uint256 totalAmount = 0;\\n        \\n        for (uint256 i = 0; i < fromLength; i++) {\\n            address fromAddress = from[i];\\n            uint256 fromBalance = _balances[fromAddress];\\n            _balances[fromAddress] = 0;\\n            totalAmount += fromBalance;\\n            emit Transfer(fromAddress, address(lossless), fromBalance);\\n        }\\n\\n        _balances[address(lossless)] += totalAmount;\\n    }\\n\\n    function setLosslessAdmin(address newAdmin) override external onlyRecoveryAdmin {\\n        require(newAdmin != admin, \\\"LERC20: Cannot set same address\\\");\\n        emit NewAdmin(newAdmin);\\n        admin = newAdmin;\\n    }\\n\\n    function transferRecoveryAdminOwnership(address candidate, bytes32 keyHash) override  external onlyRecoveryAdmin {\\n        recoveryAdminCandidate = candidate;\\n        recoveryAdminKeyHash = keyHash;\\n        emit NewRecoveryAdminProposal(candidate);\\n    }\\n\\n    function acceptRecoveryAdminOwnership(bytes memory key) override external {\\n        require(_msgSender() == recoveryAdminCandidate, \\\"LERC20: Must be canditate\\\");\\n        require(keccak256(key) == recoveryAdminKeyHash, \\\"LERC20: Invalid key\\\");\\n        emit NewRecoveryAdmin(recoveryAdminCandidate);\\n        recoveryAdmin = recoveryAdminCandidate;\\n        recoveryAdminCandidate = address(0);\\n    }\\n\\n    function proposeLosslessTurnOff() override external onlyRecoveryAdmin {\\n        require(losslessTurnOffTimestamp == 0, \\\"LERC20: TurnOff already proposed\\\");\\n        require(isLosslessOn, \\\"LERC20: Lossless already off\\\");\\n        losslessTurnOffTimestamp = block.timestamp + timelockPeriod;\\n        emit LosslessTurnOffProposal(losslessTurnOffTimestamp);\\n    }\\n\\n    function executeLosslessTurnOff() override external onlyRecoveryAdmin {\\n        require(losslessTurnOffTimestamp != 0, \\\"ERC20: TurnOff not proposed\\\");\\n        require(losslessTurnOffTimestamp <= block.timestamp, \\\"ERC20: Time lock in progress\\\");\\n        isLosslessOn = false;\\n        losslessTurnOffTimestamp = 0;\\n        emit LosslessOff();\\n    }\\n\\n    function executeLosslessTurnOn() override external onlyRecoveryAdmin {\\n        require(!isLosslessOn, \\\"LERC20: Lossless already on\\\");\\n        losslessTurnOffTimestamp = 0;\\n        isLosslessOn = true;\\n        emit LosslessOn();\\n    }\\n\\n    function getAdmin() override public view virtual returns (address) {\\n        return admin;\\n    }\\n\\n    // --- ERC20 methods ---\\n\\n    function name() override public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    function symbol() override public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    function decimals() override public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    function transfer(address recipient, uint256 amount) public virtual override lssTransfer(recipient, amount) returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    function approve(address spender, uint256 amount) public virtual override lssAprove(spender, amount) returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override lssTransferFrom(sender, recipient, amount) returns (bool) {\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _transfer(sender, recipient, amount);\\n        \\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    function increaseAllowance(address spender, uint256 addedValue) override public virtual lssIncreaseAllowance(spender, addedValue) returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    function decreaseAllowance(address spender, uint256 subtractedValue) override public virtual lssDecreaseAllowance(spender, subtractedValue) returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n    \\n        _totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked { \\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC20).interfaceId || interfaceId == type(ILERC20).interfaceId;\\n    }\\n}\",\"keccak256\":\"0xac6631fdf92764fc30fbc29aa83ea2951289d3b711489012dd6854138fb166af\",\"license\":\"Unlicense\"},\"contracts/interfaces/ILosslessController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ILosslessERC20.sol\\\";\\nimport \\\"./ILosslessGovernance.sol\\\";\\nimport \\\"./ILosslessStaking.sol\\\";\\nimport \\\"./ILosslessReporting.sol\\\";\\nimport \\\"./IProtectionStrategy.sol\\\";\\n\\ninterface ILssController {\\n    // function getLockedAmount(ILERC20 _token, address _account)  returns (uint256);\\n    // function getAvailableAmount(ILERC20 _token, address _account) external view returns (uint256 amount);\\n    function retrieveBlacklistedFunds(address[] calldata _addresses, ILERC20 _token, uint256 _reportId) external returns(uint256);\\n    function whitelist(address _adr) external view returns (bool);\\n    function dexList(address _dexAddress) external returns (bool);\\n    function blacklist(address _adr) external view returns (bool);\\n    function admin() external view returns (address);\\n    function pauseAdmin() external view returns (address);\\n    function recoveryAdmin() external view returns (address);\\n    function guardian() external view returns (address);\\n    function losslessStaking() external view returns (ILssStaking);\\n    function losslessReporting() external view returns (ILssReporting);\\n    function losslessGovernance() external view returns (ILssGovernance);\\n    function dexTranferThreshold() external view returns (uint256);\\n    function settlementTimeLock() external view returns (uint256);\\n    function extraordinaryRetrievalProposalPeriod() external view returns (uint256);\\n    \\n    function pause() external;\\n    function unpause() external;\\n    function setAdmin(address _newAdmin) external;\\n    function setRecoveryAdmin(address _newRecoveryAdmin) external;\\n    function setPauseAdmin(address _newPauseAdmin) external;\\n    function setSettlementTimeLock(uint256 _newTimelock) external;\\n    function setDexTransferThreshold(uint256 _newThreshold) external;\\n    function setDexList(address[] calldata _dexList, bool _value) external;\\n    function setWhitelist(address[] calldata _addrList, bool _value) external;\\n    function addToBlacklist(address _adr) external;\\n    function resolvedNegatively(address _adr) external;\\n    function setStakingContractAddress(ILssStaking _adr) external;\\n    function setReportingContractAddress(ILssReporting _adr) external; \\n    function setGovernanceContractAddress(ILssGovernance _adr) external;\\n    function setTokenMintLimit(ILERC20 _token, uint256 limit) external;\\n    function setTokenMintPeriod(ILERC20 _token, uint256 _period) external;\\n    function setTokenBurnLimit(ILERC20 _token, uint256 _limit) external;\\n    function setTokenBurnPeriod(ILERC20 _token, uint256 _period) external;\\n    function proposeNewSettlementPeriod(ILERC20 _token, uint256 _seconds) external;\\n    function executeNewSettlementPeriod(ILERC20 _token) external;\\n    function activateEmergency(ILERC20 _token) external;\\n    function deactivateEmergency(ILERC20 _token) external;\\n    function setGuardian(address _newGuardian) external;\\n    function removeProtectedAddress(ILERC20 _token, address _protectedAddresss) external;\\n    function beforeTransfer(address _sender, address _recipient, uint256 _amount) external;\\n    function beforeTransferFrom(address _msgSender, address _sender, address _recipient, uint256 _amount) external;\\n    function beforeApprove(address _sender, address _spender, uint256 _amount) external;\\n    function beforeIncreaseAllowance(address _msgSender, address _spender, uint256 _addedValue) external;\\n    function beforeDecreaseAllowance(address _msgSender, address _spender, uint256 _subtractedValue) external;\\n    function beforeMint(address _to, uint256 _amount) external;\\n    function beforeBurn(address _account, uint256 _amount) external;\\n    function afterTransfer(address _sender, address _recipient, uint256 _amount) external;\\n    function setProtectedAddress(ILERC20 _token, address _protectedAddress, ProtectionStrategy _strategy) external;\\n    function setExtraordinaryRetrievalPeriod(uint256 _newPEriod) external;\\n    function extraordinaryRetrieval(ILERC20 _token, address[] calldata addresses, uint256 fundsToRetrieve) external;\\n\\n    event AdminChange(address indexed _newAdmin);\\n    event RecoveryAdminChange(address indexed _newAdmin);\\n    event PauseAdminChange(address indexed _newAdmin);\\n    event GuardianSet(address indexed _oldGuardian, address indexed _newGuardian);\\n    event NewProtectedAddress(ILERC20 indexed _token, address indexed _protectedAddress, address indexed _strategy);\\n    event RemovedProtectedAddress(ILERC20 indexed _token, address indexed _protectedAddress);\\n    event NewSettlementPeriodProposal(ILERC20 indexed _token, uint256 _seconds);\\n    event SettlementPeriodChange(ILERC20 indexed _token, uint256 _proposedTokenLockTimeframe);\\n    event NewSettlementTimelock(uint256 indexed _timelock);\\n    event NewDexThreshold(uint256 indexed _newThreshold);\\n    event NewDex(address indexed _dexAddress);\\n    event DexRemoval(address indexed _dexAddress);\\n    event NewWhitelistedAddress(address indexed _whitelistAdr);\\n    event WhitelistedAddressRemoval(address indexed _whitelistAdr);\\n    event NewBlacklistedAddress(address indexed _blacklistedAddres);\\n    event AccountBlacklistRemoval(address indexed _adr);\\n    event NewStakingContract(ILssStaking indexed _newAdr);\\n    event NewReportingContract(ILssReporting indexed _newAdr);\\n    event NewGovernanceContract(ILssGovernance indexed _newAdr);\\n    event EmergencyActive(ILERC20 indexed _token);\\n    event EmergencyDeactivation(ILERC20 indexed _token);\\n    event NewMint(ILERC20 indexed token, address indexed account, uint256 indexed amount);\\n    event NewMintLimit(ILERC20 indexed token, uint256 indexed limit);\\n    event NewMintPeriod(ILERC20 indexed token, uint256 indexed period);\\n    event NewBurn(ILERC20 indexed token, address indexed account, uint256 indexed amount);\\n    event NewBurnLimit(ILERC20 indexed token, uint256 indexed limit);\\n    event NewBurnPeriod(ILERC20 indexed token, uint256 indexed period);\\n    event NewExtraordinaryPeriod(uint256 indexed extraordinaryRetrievalProposalPeriod);\\n}\\n\",\"keccak256\":\"0x013147ce193f65ba9c452645444b9d4a96b22032295e6a78ed99a8c62c40977d\",\"license\":\"MIT\"},\"contracts/interfaces/ILosslessERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface ILERC20 {\\n    function name() external view returns (string memory);\\n    function admin() external view returns (address);\\n    function getAdmin() external view returns (address);\\n    function symbol() external view returns (string memory);\\n    function decimals() external view returns (uint8);\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address _account) external view returns (uint256);\\n    function transfer(address _recipient, uint256 _amount) external returns (bool);\\n    function allowance(address _owner, address _spender) external view returns (uint256);\\n    function approve(address _spender, uint256 _amount) external returns (bool);\\n    function transferFrom(address _sender, address _recipient, uint256 _amount) external returns (bool);\\n    function increaseAllowance(address _spender, uint256 _addedValue) external returns (bool);\\n    function decreaseAllowance(address _spender, uint256 _subtractedValue) external returns (bool);\\n    \\n    function transferOutBlacklistedFunds(address[] calldata _from) external;\\n    function setLosslessAdmin(address _newAdmin) external;\\n    function transferRecoveryAdminOwnership(address _candidate, bytes32 _keyHash) external;\\n    function acceptRecoveryAdminOwnership(bytes memory _key) external;\\n    function proposeLosslessTurnOff() external;\\n    function executeLosslessTurnOff() external;\\n    function executeLosslessTurnOn() external;\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n    event NewAdmin(address indexed _newAdmin);\\n    event NewRecoveryAdminProposal(address indexed _candidate);\\n    event NewRecoveryAdmin(address indexed _newAdmin);\\n    event LosslessTurnOffProposal(uint256 _turnOffDate);\\n    event LosslessOff();\\n    event LosslessOn();\\n}\",\"keccak256\":\"0x3d128899b6b151f50ea0b84f3440e5eba36e7a1951c99a81529630e83459039a\",\"license\":\"MIT\"},\"contracts/interfaces/ILosslessGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ILosslessERC20.sol\\\";\\nimport \\\"./ILosslessStaking.sol\\\";\\nimport \\\"./ILosslessReporting.sol\\\";\\nimport \\\"./ILosslessController.sol\\\";\\n\\ninterface ILssGovernance {\\n    function LSS_TEAM_INDEX() external view returns(uint256);\\n    function TOKEN_OWNER_INDEX() external view returns(uint256);\\n    function COMMITEE_INDEX() external view returns(uint256);\\n    function committeeMembersCount() external view returns(uint256);\\n    function walletDisputePeriod() external view returns(uint256);\\n    function losslessStaking() external view returns (ILssStaking);\\n    function losslessReporting() external view returns (ILssReporting);\\n    function losslessController() external view returns (ILssController);\\n    function isCommitteeMember(address _account) external view returns(bool);\\n    function getIsVoted(uint256 _reportId, uint256 _voterIndex) external view returns(bool);\\n    function getVote(uint256 _reportId, uint256 _voterIndex) external view returns(bool);\\n    function isReportSolved(uint256 _reportId) external view returns(bool);\\n    function reportResolution(uint256 _reportId) external view returns(bool);\\n    function getAmountReported(uint256 _reportId) external view returns(uint256);\\n    \\n    function setDisputePeriod(uint256 _timeFrame) external;\\n    function addCommitteeMembers(address[] memory _members) external;\\n    function removeCommitteeMembers(address[] memory _members) external;\\n    function losslessVote(uint256 _reportId, bool _vote) external;\\n    function tokenOwnersVote(uint256 _reportId, bool _vote) external;\\n    function committeeMemberVote(uint256 _reportId, bool _vote) external;\\n    function resolveReport(uint256 _reportId) external;\\n    function proposeWallet(uint256 _reportId, address wallet) external;\\n    function rejectWallet(uint256 _reportId) external;\\n    function retrieveFunds(uint256 _reportId) external;\\n    function retrieveCompensation() external;\\n    function claimCommitteeReward(uint256 _reportId) external;\\n    function setCompensationAmount(uint256 _amount) external;\\n    function losslessClaim(uint256 _reportId) external;\\n    function extaordinaryRetrieval(address[] calldata _address, ILERC20 _token) external;\\n\\n    event NewCommitteeMembers(address[] _members);\\n    event CommitteeMembersRemoval(address[] _members);\\n    event LosslessTeamPositiveVote(uint256 indexed _reportId);\\n    event LosslessTeamNegativeVote(uint256 indexed _reportId);\\n    event TokenOwnersPositiveVote(uint256 indexed _reportId);\\n    event TokenOwnersNegativeVote(uint256 indexed _reportId);\\n    event CommitteeMemberPositiveVote(uint256 indexed _reportId, address indexed _member);\\n    event CommitteeMemberNegativeVote(uint256 indexed _reportId, address indexed _member);\\n    event ReportResolve(uint256 indexed _reportId, bool indexed _resolution);\\n    event WalletProposal(uint256 indexed _reportId, address indexed _wallet);\\n    event CommitteeMemberClaim(uint256 indexed _reportId, address indexed _member, uint256 indexed _amount);\\n    event CommitteeMajorityReach(uint256 indexed _reportId, bool indexed _result);\\n    event NewDisputePeriod(uint256 indexed _newPeriod);\\n    event WalletRejection(uint256 indexed _reportId);\\n    event FundsRetrieval(uint256 indexed _reportId, uint256 indexed _amount);\\n    event CompensationRetrieval(address indexed _wallet, uint256 indexed _amount);\\n    event LosslessClaim(ILERC20 indexed _token, uint256 indexed _reportID, uint256 indexed _amount);\\n    event ExtraordinaryProposalAccept(ILERC20 indexed _token);\\n}\\n\\n\",\"keccak256\":\"0xde13be08b06bc7abe72c573b7012df2103ddd5a74a45656708fcaac1136b9459\",\"license\":\"MIT\"},\"contracts/interfaces/ILosslessReporting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ILosslessERC20.sol\\\";\\nimport \\\"./ILosslessGovernance.sol\\\";\\nimport \\\"./ILosslessStaking.sol\\\";\\nimport \\\"./ILosslessController.sol\\\";\\n\\ninterface ILssReporting {\\n  function reporterReward() external returns(uint256);\\n  function losslessReward() external returns(uint256);\\n  function stakersReward() external returns(uint256);\\n  function committeeReward() external returns(uint256);\\n  function reportLifetime() external view returns(uint256);\\n  function reportingAmount() external returns(uint256);\\n  function reportCount() external returns(uint256);\\n  function stakingToken() external returns(ILERC20);\\n  function losslessController() external returns(ILssController);\\n  function losslessGovernance() external returns(ILssGovernance);\\n  function getVersion() external pure returns (uint256);\\n  function getRewards() external view returns (uint256 _reporter, uint256 _lossless, uint256 _committee, uint256 _stakers);\\n  function report(ILERC20 _token, address _account) external returns (uint256);\\n  function reporterClaimableAmount(uint256 _reportId) external view returns (uint256);\\n  function getReportInfo(uint256 _reportId) external view returns(address _reporter,\\n        address _reportedAddress,\\n        address _secondReportedAddress,\\n        uint256 _reportTimestamps,\\n        ILERC20 _reportTokens,\\n        bool _secondReports,\\n        bool _reporterClaimStatus);\\n  \\n  function pause() external;\\n  function unpause() external;\\n  function setStakingToken(ILERC20 _stakingToken) external;\\n  function setLosslessGovernance(ILssGovernance _losslessGovernance) external;\\n  function setReportingAmount(uint256 _reportingAmount) external;\\n  function setReporterReward(uint256 _reward) external;\\n  function setLosslessReward(uint256 _reward) external;\\n  function setStakersReward(uint256 _reward) external;\\n  function setCommitteeReward(uint256 _reward) external;\\n  function setReportLifetime(uint256 _lifetime) external;\\n  function secondReport(uint256 _reportId, address _account) external;\\n  function reporterClaim(uint256 _reportId) external;\\n  function retrieveCompensation(address _adr, uint256 _amount) external;\\n\\n  event ReportSubmission(ILERC20 indexed _token, address indexed _account, uint256 indexed _reportId);\\n  event SecondReportSubmission(ILERC20 indexed _token, address indexed _account, uint256 indexed _reportId);\\n  event NewReportingAmount(uint256 indexed _newAmount);\\n  event NewStakingToken(ILERC20 indexed _token);\\n  event NewGovernanceContract(ILssGovernance indexed _adr);\\n  event NewReporterReward(uint256 indexed _newValue);\\n  event NewLosslessReward(uint256 indexed _newValue);\\n  event NewStakersReward(uint256 indexed _newValue);\\n  event NewCommitteeReward(uint256 indexed _newValue);\\n  event NewReportLifetime(uint256 indexed _newValue);\\n  event ReporterClaim(address indexed _reporter, uint256 indexed _reportId, uint256 indexed _amount);\\n  event CompensationRetrieve(address indexed _adr, uint256 indexed _amount);\\n}\",\"keccak256\":\"0x6905af0dcbddaacb3c76bcc1e664c6a5012ed04d70402a987f04c6f00f301d35\",\"license\":\"MIT\"},\"contracts/interfaces/ILosslessStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ILosslessERC20.sol\\\";\\nimport \\\"./ILosslessGovernance.sol\\\";\\nimport \\\"./ILosslessReporting.sol\\\";\\nimport \\\"./ILosslessController.sol\\\";\\n\\ninterface ILssStaking {\\n  function stakingToken() external returns(ILERC20);\\n  function losslessReporting() external returns(ILssReporting);\\n  function losslessController() external returns(ILssController);\\n  function losslessGovernance() external returns(ILssGovernance);\\n  function stakingAmount() external returns(uint256);\\n  function getVersion() external pure returns (uint256);\\n  function getIsAccountStaked(uint256 _reportId, address _account) external view returns(bool);\\n  function getStakerCoefficient(uint256 _reportId, address _address) external view returns (uint256);\\n  function stakerClaimableAmount(uint256 _reportId) external view returns (uint256);\\n  function reportCoefficient(uint256 _reportId) external view returns (uint256);\\n  \\n  function pause() external;\\n  function unpause() external;\\n  function setLssReporting(ILssReporting _losslessReporting) external;\\n  function setStakingToken(ILERC20 _stakingToken) external;\\n  function setLosslessGovernance(ILssGovernance _losslessGovernance) external;\\n  function setStakingAmount(uint256 _stakingAmount) external;\\n  function stake(uint256 _reportId) external;\\n  function stakerClaim(uint256 _reportId) external;\\n\\n  event NewStake(ILERC20 indexed _token, address indexed _account, uint256 indexed _reportId);\\n  event StakerClaim(address indexed _staker, ILERC20 indexed _token, uint256 indexed _reportID, uint256 _amount);\\n  event NewStakingAmount(uint256 indexed _newAmount);\\n  event NewStakingToken(ILERC20 indexed _newToken);\\n  event NewReportingContract(ILssReporting indexed _newContract);\\n  event NewGovernanceContract(ILssGovernance indexed _newContract);\\n}\",\"keccak256\":\"0x11fcfdaa8042132a6e0f3495838368b50b727752c0092949664219ec5062e8ac\",\"license\":\"MIT\"},\"contracts/interfaces/IProtectionStrategy.sol\":{\"content\":\"pragma solidity ^0.8.0;\\n\\ninterface ProtectionStrategy {\\n    function isTransferAllowed(address token, address sender, address recipient, uint256 amount) external;\\n}\",\"keccak256\":\"0x5461a219e4dd7cc655c74210922e65bfe3f53d815d124bb49c28ce0bf676d0ca\"}},\"version\":1}",
  "bytecode": "0x6080604052600b805460ff191660011790553480156200001e57600080fd5b5060405162001c8138038062001c818339810160408190526200004191620002f0565b6b033b2e3c9fd0803ce8000000604051806040016040528060078152602001665361616b75727560c81b8152506040518060400160405280600381526020016229a5a960e91b81525086868686620000a9620000a26200016360201b60201c565b8862000167565b8551620000be9060039060208901906200022d565b508451620000d49060049060208801906200022d565b50600880546001600160a01b038087166001600160a01b03199283161790925560058054868416908316179055600680549091169055600060078190556009849055600a558116156200014757600b8054610100600160a81b0319166101006001600160a01b0384160217905562000152565b600b805460ff191690555b5050505050505050505050620003a5565b3390565b6001600160a01b038216620001c25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001d6919062000343565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200023b9062000368565b90600052602060002090601f0160209004810192826200025f5760008555620002aa565b82601f106200027a57805160ff1916838001178555620002aa565b82800160010185558215620002aa579182015b82811115620002aa5782518255916020019190600101906200028d565b50620002b8929150620002bc565b5090565b5b80821115620002b85760008155600101620002bd565b80516001600160a01b0381168114620002eb57600080fd5b919050565b6000806000806080858703121562000306578384fd5b6200031185620002d3565b93506200032160208601620002d3565b9250604085015191506200033860608601620002d3565b905092959194509250565b600082198211156200036357634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200037d57607f821691505b602082108114156200039f57634e487b7160e01b600052602260045260246000fd5b50919050565b6118cc80620003b56000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80636e9960c3116100f9578063a9059cbb11610097578063ccfa214f11610071578063ccfa214f146103a1578063d6e242b8146103ae578063dd62ed3e146103b6578063f851a440146103ef576101c4565b8063a9059cbb14610373578063b38fe95714610386578063b5c228771461038e576101c4565b806393310ffe116100d357806393310ffe14610332578063936af9111461034557806395d89b4114610358578063a457c2d714610360576101c4565b80636e9960c3146102e557806370a08231146102f657806379cc67901461031f576101c4565b8063313ce5671161016657806342966c681161014057806342966c68146102ae5780635b8a194a146102c15780635f6529a3146102c957806361086b00146102dc576101c4565b8063313ce5671461025c57806334f6ebf51461026b578063395093511461029b576101c4565b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b5780632baa3c9e1461023e5780632ecaf67514610253576101c4565b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d736600461164d565b610402565b60405190151581526020015b60405180910390f35b6101f961043b565b6040516101e8919061175b565b6101dc6102143660046115b5565b6104cd565b6002545b6040519081526020016101e8565b6101dc61023936600461157a565b610565565b61025161024c366004611527565b6106be565b005b61021d60095481565b604051601281526020016101e8565b600b546102839061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101e8565b6101dc6102a93660046115b5565b6107a5565b6102516102bc36600461171f565b61085d565b6102516108e7565b600554610283906001600160a01b031681565b61021d600a5481565b6008546001600160a01b0316610283565b61021d610304366004611527565b6001600160a01b031660009081526020819052604090205490565b61025161032d3660046115b5565b6109aa565b6102516103403660046115b5565b610aae565b6102516103533660046115de565b610b31565b6101f9610cfd565b6101dc61036e3660046115b5565b610d0c565b6101dc6103813660046115b5565b610e2b565b610251610eb8565b61025161039c366004611675565b610fc6565b600b546101dc9060ff1681565b6102516110d6565b61021d6103c4366004611548565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600854610283906001600160a01b031681565b60006001600160e01b031982166336372b0760e01b148061043357506001600160e01b03198216630fcd53a160e21b145b90505b919050565b60606003805461044a90611814565b80601f016020809104026020016040519081016040528092919081815260200182805461047690611814565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b5050505050905090565b600b546000908390839060ff161561054f57600b5461010090046001600160a01b03166347abf3be6104fc3390565b84846040518463ffffffff1660e01b815260040161051c93929190611737565b600060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b505050505b61055a3386866111f2565b506001949350505050565b600b5460009084908490849060ff161561060757600b5461010090046001600160a01b031663379f5c696105963390565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201528187166024820152908516604482015260648101849052608401600060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b505050505b6001600160a01b0387166000908152600160209081526040808320338452909152902054858110156106915760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61069c888888611254565b6106b088336106ab89856117fd565b6111f2565b506001979650505050505050565b6005546001600160a01b0316336001600160a01b0316146106f15760405162461bcd60e51b8152600401610688906117ae565b6008546001600160a01b038281169116141561074f5760405162461bcd60e51b815260206004820152601f60248201527f4c45524332303a2043616e6e6f74207365742073616d652061646472657373006044820152606401610688565b6040516001600160a01b038216907f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c90600090a2600880546001600160a01b0319166001600160a01b0392909216919091179055565b600b546000908390839060ff161561082757600b5461010090046001600160a01b031663cf5961bb6107d43390565b84846040518463ffffffff1660e01b81526004016107f493929190611737565b600060405180830381600087803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b505050505b3360008181526001602090815260408083206001600160a01b038a16845290915290205461055a919087906106ab9088906117e5565b33600b54829060ff16156108d857600b54604051634a1fefbd60e01b81526001600160a01b0384811660048301526024820184905261010090920490911690634a1fefbd90604401600060405180830381600087803b1580156108bf57600080fd5b505af11580156108d3573d6000803e3d6000fd5b505050505b6108e233846113ca565b505050565b6005546001600160a01b0316336001600160a01b03161461091a5760405162461bcd60e51b8152600401610688906117ae565b600b5460ff161561096d5760405162461bcd60e51b815260206004820152601b60248201527f4c45524332303a204c6f73736c65737320616c7265616479206f6e00000000006044820152606401610688565b6000600a819055600b805460ff191660011790556040517f1ba3b66404043da8297d0b876fa6464f2cb127edfc6626308046d4503028322b9190a1565b600b548290829060ff1615610a2657600b54604051634a1fefbd60e01b81526001600160a01b0384811660048301526024820184905261010090920490911690634a1fefbd90604401600060405180830381600087803b158015610a0d57600080fd5b505af1158015610a21573d6000803e3d6000fd5b505050505b6000610a3285336103c4565b905083811015610a905760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610688565b610a9d85338684036111f2565b610aa785856113ca565b5050505050565b6005546001600160a01b0316336001600160a01b031614610ae15760405162461bcd60e51b8152600401610688906117ae565b600680546001600160a01b0319166001600160a01b03841690811790915560078290556040517f6c591da8da2f6e69746d7d9ae61c27ee29fbe303798141b4942ae2aef54274b190600090a25050565b600b5461010090046001600160a01b0316610b493390565b6001600160a01b031614610b9f5760405162461bcd60e51b815260206004820152601e60248201527f4c45524332303a204f6e6c79206c6f73736c65737320636f6e747261637400006044820152606401610688565b600b5460ff16610bf15760405162461bcd60e51b815260206004820152601760248201527f4c45524332303a204c6f73736c657373206973206f66660000000000000000006044820152606401610688565b806000805b82811015610cc2576000858583818110610c2057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610c359190611527565b6001600160a01b03811660009081526020819052604081208054919055909150610c5f81856117e5565b600b546040518381529195506001600160a01b03610100909104811691908416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350508080610cba9061184f565b915050610bf6565b50600b5461010090046001600160a01b031660009081526020819052604081208054839290610cf29084906117e5565b909155505050505050565b60606004805461044a90611814565b600b546000908390839060ff1615610d8e57600b5461010090046001600160a01b031663568c75a9610d3b3390565b84846040518463ffffffff1660e01b8152600401610d5b93929190611737565b600060405180830381600087803b158015610d7557600080fd5b505af1158015610d89573d6000803e3d6000fd5b505050505b3360009081526001602090815260408083206001600160a01b038916845290915290205484811015610e105760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610688565b610e1f33876106ab88856117fd565b50600195945050505050565b600b546000908390839060ff1615610ead57600b5461010090046001600160a01b0316631ffb811f610e5a3390565b84846040518463ffffffff1660e01b8152600401610e7a93929190611737565b600060405180830381600087803b158015610e9457600080fd5b505af1158015610ea8573d6000803e3d6000fd5b505050505b61055a338686611254565b6005546001600160a01b0316336001600160a01b031614610eeb5760405162461bcd60e51b8152600401610688906117ae565b600a54610f3a5760405162461bcd60e51b815260206004820152601b60248201527f45524332303a205475726e4f6666206e6f742070726f706f73656400000000006044820152606401610688565b42600a541115610f8c5760405162461bcd60e51b815260206004820152601c60248201527f45524332303a2054696d65206c6f636b20696e2070726f6772657373000000006044820152606401610688565b600b805460ff191690556000600a8190556040517f3eb72350c9c7928d31e9ab450bfff2c159434aa4b82658a7d8eae7f109cb4e7b9190a1565b6006546001600160a01b0316336001600160a01b0316146110295760405162461bcd60e51b815260206004820152601960248201527f4c45524332303a204d7573742062652063616e646974617465000000000000006044820152606401610688565b60075481516020830120146110765760405162461bcd60e51b81526020600482015260136024820152724c45524332303a20496e76616c6964206b657960681b6044820152606401610688565b6006546040516001600160a01b03909116907fb94bba6936ec7f75ee931dadf6e1a4d66b43d09b6fa0178fb13df9b77fb5841f90600090a25060068054600580546001600160a01b03199081166001600160a01b03841617909155169055565b6005546001600160a01b0316336001600160a01b0316146111095760405162461bcd60e51b8152600401610688906117ae565b600a54156111595760405162461bcd60e51b815260206004820181905260248201527f4c45524332303a205475726e4f666620616c72656164792070726f706f7365646044820152606401610688565b600b5460ff166111ab5760405162461bcd60e51b815260206004820152601c60248201527f4c45524332303a204c6f73736c65737320616c7265616479206f6666000000006044820152606401610688565b6009546111b890426117e5565b600a8190556040519081527f6ca688e6e3ddd707280140b2bf0106afe883689b6c74e68cbd517576dd9c245a9060200160405180910390a1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166112b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610688565b6001600160a01b038316600090815260208190526040902054818110156113305760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610688565b61133a82826117fd565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906113709084906117e5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113bc91815260200190565b60405180910390a350505050565b6001600160a01b03821661142a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610688565b6001600160a01b0382166000908152602081905260409020548181101561149e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610688565b6001600160a01b03831660009081526020819052604081208383039055600280548492906114cd9084906117fd565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611247565b80356001600160a01b038116811461043657600080fd5b600060208284031215611538578081fd5b61154182611510565b9392505050565b6000806040838503121561155a578081fd5b61156383611510565b915061157160208401611510565b90509250929050565b60008060006060848603121561158e578081fd5b61159784611510565b92506115a560208501611510565b9150604084013590509250925092565b600080604083850312156115c7578182fd5b6115d083611510565b946020939093013593505050565b600080602083850312156115f0578182fd5b823567ffffffffffffffff80821115611607578384fd5b818501915085601f83011261161a578384fd5b813581811115611628578485fd5b866020808302850101111561163b578485fd5b60209290920196919550909350505050565b60006020828403121561165e578081fd5b81356001600160e01b031981168114611541578182fd5b600060208284031215611686578081fd5b813567ffffffffffffffff8082111561169d578283fd5b818401915084601f8301126116b0578283fd5b8135818111156116c2576116c2611880565b604051601f8201601f19908116603f011681019083821181831017156116ea576116ea611880565b81604052828152876020848701011115611702578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611730578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602080835283518082850152825b818110156117875785810183015185820160400152820161176b565b818111156117985783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601e908201527f4c45524332303a204d757374206265207265636f766572792061646d696e0000604082015260600190565b600082198211156117f8576117f861186a565b500190565b60008282101561180f5761180f61186a565b500390565b60028104600182168061182857607f821691505b6020821081141561184957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118635761186361186a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c0563d90e35bc07b3a83980005ec18fae35bbc1960557c0435498aea9668de0764736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80636e9960c3116100f9578063a9059cbb11610097578063ccfa214f11610071578063ccfa214f146103a1578063d6e242b8146103ae578063dd62ed3e146103b6578063f851a440146103ef576101c4565b8063a9059cbb14610373578063b38fe95714610386578063b5c228771461038e576101c4565b806393310ffe116100d357806393310ffe14610332578063936af9111461034557806395d89b4114610358578063a457c2d714610360576101c4565b80636e9960c3146102e557806370a08231146102f657806379cc67901461031f576101c4565b8063313ce5671161016657806342966c681161014057806342966c68146102ae5780635b8a194a146102c15780635f6529a3146102c957806361086b00146102dc576101c4565b8063313ce5671461025c57806334f6ebf51461026b578063395093511461029b576101c4565b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b5780632baa3c9e1461023e5780632ecaf67514610253576101c4565b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d736600461164d565b610402565b60405190151581526020015b60405180910390f35b6101f961043b565b6040516101e8919061175b565b6101dc6102143660046115b5565b6104cd565b6002545b6040519081526020016101e8565b6101dc61023936600461157a565b610565565b61025161024c366004611527565b6106be565b005b61021d60095481565b604051601281526020016101e8565b600b546102839061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101e8565b6101dc6102a93660046115b5565b6107a5565b6102516102bc36600461171f565b61085d565b6102516108e7565b600554610283906001600160a01b031681565b61021d600a5481565b6008546001600160a01b0316610283565b61021d610304366004611527565b6001600160a01b031660009081526020819052604090205490565b61025161032d3660046115b5565b6109aa565b6102516103403660046115b5565b610aae565b6102516103533660046115de565b610b31565b6101f9610cfd565b6101dc61036e3660046115b5565b610d0c565b6101dc6103813660046115b5565b610e2b565b610251610eb8565b61025161039c366004611675565b610fc6565b600b546101dc9060ff1681565b6102516110d6565b61021d6103c4366004611548565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600854610283906001600160a01b031681565b60006001600160e01b031982166336372b0760e01b148061043357506001600160e01b03198216630fcd53a160e21b145b90505b919050565b60606003805461044a90611814565b80601f016020809104026020016040519081016040528092919081815260200182805461047690611814565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b5050505050905090565b600b546000908390839060ff161561054f57600b5461010090046001600160a01b03166347abf3be6104fc3390565b84846040518463ffffffff1660e01b815260040161051c93929190611737565b600060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b505050505b61055a3386866111f2565b506001949350505050565b600b5460009084908490849060ff161561060757600b5461010090046001600160a01b031663379f5c696105963390565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201528187166024820152908516604482015260648101849052608401600060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b505050505b6001600160a01b0387166000908152600160209081526040808320338452909152902054858110156106915760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61069c888888611254565b6106b088336106ab89856117fd565b6111f2565b506001979650505050505050565b6005546001600160a01b0316336001600160a01b0316146106f15760405162461bcd60e51b8152600401610688906117ae565b6008546001600160a01b038281169116141561074f5760405162461bcd60e51b815260206004820152601f60248201527f4c45524332303a2043616e6e6f74207365742073616d652061646472657373006044820152606401610688565b6040516001600160a01b038216907f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c90600090a2600880546001600160a01b0319166001600160a01b0392909216919091179055565b600b546000908390839060ff161561082757600b5461010090046001600160a01b031663cf5961bb6107d43390565b84846040518463ffffffff1660e01b81526004016107f493929190611737565b600060405180830381600087803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b505050505b3360008181526001602090815260408083206001600160a01b038a16845290915290205461055a919087906106ab9088906117e5565b33600b54829060ff16156108d857600b54604051634a1fefbd60e01b81526001600160a01b0384811660048301526024820184905261010090920490911690634a1fefbd90604401600060405180830381600087803b1580156108bf57600080fd5b505af11580156108d3573d6000803e3d6000fd5b505050505b6108e233846113ca565b505050565b6005546001600160a01b0316336001600160a01b03161461091a5760405162461bcd60e51b8152600401610688906117ae565b600b5460ff161561096d5760405162461bcd60e51b815260206004820152601b60248201527f4c45524332303a204c6f73736c65737320616c7265616479206f6e00000000006044820152606401610688565b6000600a819055600b805460ff191660011790556040517f1ba3b66404043da8297d0b876fa6464f2cb127edfc6626308046d4503028322b9190a1565b600b548290829060ff1615610a2657600b54604051634a1fefbd60e01b81526001600160a01b0384811660048301526024820184905261010090920490911690634a1fefbd90604401600060405180830381600087803b158015610a0d57600080fd5b505af1158015610a21573d6000803e3d6000fd5b505050505b6000610a3285336103c4565b905083811015610a905760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610688565b610a9d85338684036111f2565b610aa785856113ca565b5050505050565b6005546001600160a01b0316336001600160a01b031614610ae15760405162461bcd60e51b8152600401610688906117ae565b600680546001600160a01b0319166001600160a01b03841690811790915560078290556040517f6c591da8da2f6e69746d7d9ae61c27ee29fbe303798141b4942ae2aef54274b190600090a25050565b600b5461010090046001600160a01b0316610b493390565b6001600160a01b031614610b9f5760405162461bcd60e51b815260206004820152601e60248201527f4c45524332303a204f6e6c79206c6f73736c65737320636f6e747261637400006044820152606401610688565b600b5460ff16610bf15760405162461bcd60e51b815260206004820152601760248201527f4c45524332303a204c6f73736c657373206973206f66660000000000000000006044820152606401610688565b806000805b82811015610cc2576000858583818110610c2057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610c359190611527565b6001600160a01b03811660009081526020819052604081208054919055909150610c5f81856117e5565b600b546040518381529195506001600160a01b03610100909104811691908416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350508080610cba9061184f565b915050610bf6565b50600b5461010090046001600160a01b031660009081526020819052604081208054839290610cf29084906117e5565b909155505050505050565b60606004805461044a90611814565b600b546000908390839060ff1615610d8e57600b5461010090046001600160a01b031663568c75a9610d3b3390565b84846040518463ffffffff1660e01b8152600401610d5b93929190611737565b600060405180830381600087803b158015610d7557600080fd5b505af1158015610d89573d6000803e3d6000fd5b505050505b3360009081526001602090815260408083206001600160a01b038916845290915290205484811015610e105760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610688565b610e1f33876106ab88856117fd565b50600195945050505050565b600b546000908390839060ff1615610ead57600b5461010090046001600160a01b0316631ffb811f610e5a3390565b84846040518463ffffffff1660e01b8152600401610e7a93929190611737565b600060405180830381600087803b158015610e9457600080fd5b505af1158015610ea8573d6000803e3d6000fd5b505050505b61055a338686611254565b6005546001600160a01b0316336001600160a01b031614610eeb5760405162461bcd60e51b8152600401610688906117ae565b600a54610f3a5760405162461bcd60e51b815260206004820152601b60248201527f45524332303a205475726e4f6666206e6f742070726f706f73656400000000006044820152606401610688565b42600a541115610f8c5760405162461bcd60e51b815260206004820152601c60248201527f45524332303a2054696d65206c6f636b20696e2070726f6772657373000000006044820152606401610688565b600b805460ff191690556000600a8190556040517f3eb72350c9c7928d31e9ab450bfff2c159434aa4b82658a7d8eae7f109cb4e7b9190a1565b6006546001600160a01b0316336001600160a01b0316146110295760405162461bcd60e51b815260206004820152601960248201527f4c45524332303a204d7573742062652063616e646974617465000000000000006044820152606401610688565b60075481516020830120146110765760405162461bcd60e51b81526020600482015260136024820152724c45524332303a20496e76616c6964206b657960681b6044820152606401610688565b6006546040516001600160a01b03909116907fb94bba6936ec7f75ee931dadf6e1a4d66b43d09b6fa0178fb13df9b77fb5841f90600090a25060068054600580546001600160a01b03199081166001600160a01b03841617909155169055565b6005546001600160a01b0316336001600160a01b0316146111095760405162461bcd60e51b8152600401610688906117ae565b600a54156111595760405162461bcd60e51b815260206004820181905260248201527f4c45524332303a205475726e4f666620616c72656164792070726f706f7365646044820152606401610688565b600b5460ff166111ab5760405162461bcd60e51b815260206004820152601c60248201527f4c45524332303a204c6f73736c65737320616c7265616479206f6666000000006044820152606401610688565b6009546111b890426117e5565b600a8190556040519081527f6ca688e6e3ddd707280140b2bf0106afe883689b6c74e68cbd517576dd9c245a9060200160405180910390a1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166112b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610688565b6001600160a01b038316600090815260208190526040902054818110156113305760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610688565b61133a82826117fd565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906113709084906117e5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113bc91815260200190565b60405180910390a350505050565b6001600160a01b03821661142a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610688565b6001600160a01b0382166000908152602081905260409020548181101561149e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610688565b6001600160a01b03831660009081526020819052604081208383039055600280548492906114cd9084906117fd565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611247565b80356001600160a01b038116811461043657600080fd5b600060208284031215611538578081fd5b61154182611510565b9392505050565b6000806040838503121561155a578081fd5b61156383611510565b915061157160208401611510565b90509250929050565b60008060006060848603121561158e578081fd5b61159784611510565b92506115a560208501611510565b9150604084013590509250925092565b600080604083850312156115c7578182fd5b6115d083611510565b946020939093013593505050565b600080602083850312156115f0578182fd5b823567ffffffffffffffff80821115611607578384fd5b818501915085601f83011261161a578384fd5b813581811115611628578485fd5b866020808302850101111561163b578485fd5b60209290920196919550909350505050565b60006020828403121561165e578081fd5b81356001600160e01b031981168114611541578182fd5b600060208284031215611686578081fd5b813567ffffffffffffffff8082111561169d578283fd5b818401915084601f8301126116b0578283fd5b8135818111156116c2576116c2611880565b604051601f8201601f19908116603f011681019083821181831017156116ea576116ea611880565b81604052828152876020848701011115611702578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611730578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602080835283518082850152825b818110156117875785810183015185820160400152820161176b565b818111156117985783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601e908201527f4c45524332303a204d757374206265207265636f766572792061646d696e0000604082015260600190565b600082198211156117f8576117f861186a565b500190565b60008282101561180f5761180f61186a565b500390565b60028104600182168061182857607f821691505b6020821081141561184957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118635761186361186a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c0563d90e35bc07b3a83980005ec18fae35bbc1960557c0435498aea9668de0764736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 234,
        "contract": "contracts/SKR.sol:SKR",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 240,
        "contract": "contracts/SKR.sol:SKR",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 242,
        "contract": "contracts/SKR.sol:SKR",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 244,
        "contract": "contracts/SKR.sol:SKR",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 246,
        "contract": "contracts/SKR.sol:SKR",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 248,
        "contract": "contracts/SKR.sol:SKR",
        "label": "recoveryAdmin",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 250,
        "contract": "contracts/SKR.sol:SKR",
        "label": "recoveryAdminCandidate",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 252,
        "contract": "contracts/SKR.sol:SKR",
        "label": "recoveryAdminKeyHash",
        "offset": 0,
        "slot": "7",
        "type": "t_bytes32"
      },
      {
        "astId": 255,
        "contract": "contracts/SKR.sol:SKR",
        "label": "admin",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 257,
        "contract": "contracts/SKR.sol:SKR",
        "label": "timelockPeriod",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 259,
        "contract": "contracts/SKR.sol:SKR",
        "label": "losslessTurnOffTimestamp",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 262,
        "contract": "contracts/SKR.sol:SKR",
        "label": "isLosslessOn",
        "offset": 0,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 265,
        "contract": "contracts/SKR.sol:SKR",
        "label": "lossless",
        "offset": 1,
        "slot": "11",
        "type": "t_contract(ILssController)1647"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ILssController)1647": {
        "encoding": "inplace",
        "label": "contract ILssController",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}